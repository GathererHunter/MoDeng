# encoding = utf-8import PILfrom reportlab.lib.pagesizes import letterfrom reportlab.lib.utils import ImageReaderfrom reportlab.pdfgen import canvasfrom DataSource.Code2Name import code2namefrom Function.SeaSelect.Sub.pdf_sub import stk_codefrom Global_Value.file_dir import sea_select_pic_dirfrom SDK.MyTimeOPT import get_current_date_strfrom reportlab.pdfbase.ttfonts import TTFontfrom reportlab.pdfbase import pdfmetricspdfmetrics.registerFont(TTFont('song', 'SURSONG.TTF'))pdfmetrics.registerFont(TTFont('hei', 'SIMHEI.TTF'))from reportlab.lib import fontsfonts.addMapping('song', 0, 0, 'song')fonts.addMapping('song', 0, 1, 'song')fonts.addMapping('song', 1, 0, 'hei')fonts.addMapping('song', 1, 1, 'hei')if __name__ == '__main__':		# 获取纸面的高度和宽度	w = letter[0]	h = letter[1]		c = canvas.Canvas(U"SingleStock" + get_current_date_str() + ".pdf", pagesize=letter)		# 测试插入图片	c.setFont("song", 10)	c.drawString(20, letter[1] - 20, stk_code + ' ' + code2name(stk_code) + ' ' + '小时数据')		# 插入小时macd图	image_file = PIL.Image.open(sea_select_pic_dir + '2019-12-21/' + 'h_' + stk_code + '.png')	c.drawImage(ImageReader(image_file), x=w * 0.05, y=h * 0.65, height=0.3*h, width=0.45*w,	            preserveAspectRatio=True)		# 插入小时指标图	image_file = PIL.Image.open(sea_select_pic_dir + '2019-12-21/' + 'h_idx_' + stk_code + '.png')	c.drawImage(ImageReader(image_file), x=w * 0.5, y=h * 0.65, height=0.3*h, width=0.45*w,	            preserveAspectRatio=True)		# 插入日线macd图	image_file = PIL.Image.open(sea_select_pic_dir + '2019-12-21/' + 'd_' + stk_code + '.png')	c.drawImage(ImageReader(image_file), x=w * 0.05, y=h * 0.35, height=0.3*h, width=0.45*w,	            preserveAspectRatio=True)		# 插入日线指标图	image_file = PIL.Image.open(sea_select_pic_dir + '2019-12-21/' + 'd_idx_' + stk_code + '.png')	c.drawImage(ImageReader(image_file), x=w * 0.5, y=h * 0.35, height=0.3*h, width=0.45*w,	            preserveAspectRatio=True)		# 插入周线图	image_file = PIL.Image.open(sea_select_pic_dir + '2019-12-21/' + 'wm_' + stk_code + '.png')	c.drawImage(ImageReader(image_file), x=w * 0.05, y=h * 0.05, height=0.3*h, width=0.45*w,	            preserveAspectRatio=True)		c.showPage()	c.save()		end = 0