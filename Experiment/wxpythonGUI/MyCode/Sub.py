# encoding=utf-8import wximport wx.xrcimport wx.gridfrom DataSource.Code2Name import code2namefrom Experiment.wxpythonGUI.MyCode.Data_Pro_Sub import get_pic_dictfrom pylab import *from PIL import Imagefrom io import BytesIOclass MyImageRenderer(wx.grid.GridCellRenderer):    def __init__(self, img):        wx.grid.GridCellRenderer.__init__(self)        self.img = img    def Draw(self, grid, attr, dc, rect, row, col, isSelected):        image = wx.MemoryDC()        image.SelectObject(self.img)        dc.SetBackgroundMode(wx.SOLID)        if isSelected:            dc.SetBrush(wx.Brush(wx.BLUE, wx.SOLID))            dc.SetPen(wx.Pen(wx.BLUE, 1, wx.SOLID))        else:            dc.SetBrush(wx.Brush(wx.WHITE, wx.SOLID))            dc.SetPen(wx.Pen(wx.WHITE, 1, wx.SOLID))        dc.DrawRectangle(rect)        width, height = self.img.GetWidth(), self.img.GetHeight()        if width > rect.width - 2:            width = rect.width - 2        if height > rect.height - 2:            height = rect.height - 2        dc.Blit(rect.x + 1, rect.y + 1, width, height, image, 0, 0, wx.COPY, True)class MyPanel1(wx.Panel):    def __init__(self, parent, stk_info):        wx.Panel.__init__(self, parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.Size(500, 300),                          style=wx.TAB_TRAVERSAL)        bSizer4 = wx.BoxSizer(wx.VERTICAL)        self.my_grid4 = wx.grid.Grid(self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, 0)        # Grid        self.my_grid4.CreateGrid(len(stk_info), 5)        self.my_grid4.EnableEditing(True)        self.my_grid4.EnableGridLines(True)        self.my_grid4.EnableDragGridSize(False)        self.my_grid4.SetMargins(0, 0)        # Columns        self.my_grid4.EnableDragColMove(False)        self.my_grid4.EnableDragColSize(True)        self.my_grid4.SetColLabelSize(30)        self.my_grid4.SetColLabelAlignment(wx.ALIGN_CENTRE, wx.ALIGN_CENTRE)        self.my_grid4.SetColLabelValue(0, "定时检测")        self.my_grid4.SetColLabelValue(1, "小时M")        self.my_grid4.SetColLabelValue(2, "日M")        self.my_grid4.SetColLabelValue(3, "周/月M")        self.my_grid4.SetColLabelValue(4, "其他指数")        # Rows        self.my_grid4.EnableDragRowSize(True)        self.my_grid4.SetRowLabelSize(80)        self.my_grid4.SetRowLabelAlignment(wx.ALIGN_CENTRE, wx.ALIGN_CENTRE)        # self.my_grid4.SetRowLabelValue()        # Add name to Rows        self.addRowName(list(stk_info.keys()))        # Add pic to cell        for r_id in range(len(stk_info.keys())):            self.insert_Pic_To_Cell(r_id, 1, stk_info[list(stk_info.keys())[r_id]]['hour'])            self.insert_Pic_To_Cell(r_id, 2, stk_info[list(stk_info.keys())[r_id]]['day'])            self.insert_Pic_To_Cell(r_id, 3, stk_info[list(stk_info.keys())[r_id]]['wm'])            self.insert_Pic_To_Cell(r_id, 4, stk_info[list(stk_info.keys())[r_id]]['index'])        # Label Appearance        # Cell Defaults        self.my_grid4.SetDefaultCellAlignment(wx.ALIGN_LEFT, wx.ALIGN_TOP)        # 设置行间隔        # self.my_grid4.SetMargins(0, 2)                bSizer4.Add(self.my_grid4, 0, wx.ALL, 5)        self.SetSizer(bSizer4)        self.Layout()    def __del__(self):        pass    def addRowName(self, stk_code_list):        """        添加行名称        :param stk_code_list:        :return:        """        for idx in range(len(stk_code_list)):            self.my_grid4.SetRowLabelValue(idx, code2name(stk_code_list[idx]))    def insert_Pic_To_Cell(self, r, c, img):        """        :param r:        :param c:        :param pic:        :return:        """        output = BytesIO()                              # BytesIO实现了在内存中读写byte        buf_save = BytesIO()        img.savefig(output, dpi=100)        output.seek(0)        img = wx.Image(output, wx.BITMAP_TYPE_ANY)        buf_save.close()        output.close()        img_Rd = MyImageRenderer(wx.Bitmap(img))        self.my_grid4.SetCellRenderer(r, c, img_Rd)        self.my_grid4.SetColSize(c, img.GetWidth() + 2)        self.my_grid4.SetRowSize(r, img.GetHeight() + 2)if __name__ == '__main__':    from DataSource.auth_info import *    app = wx.App(False)    frame = wx.Frame(None, title="魔灯-V20190919")    nb = wx.Notebook(frame)    # 生成所需图片    r = get_pic_dict()    nb.AddPage(MyPanel1(nb, r['index']), "Index")    nb.AddPage(MyPanel1(nb, r['buy']), "Buy")    nb.AddPage(MyPanel1(nb, r['concerned']), "Concerned")    frame.Show()    app.MainLoop()